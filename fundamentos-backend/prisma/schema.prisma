// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  ELECTRONICS
  FASHION
  FOODS
  MATERIALS
}

model Product {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  price       Float
  inStock     Int       @map("in_stock")
  isAvailable Boolean   @default(true) @map("is_available")
  category    Category
  tags        String[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  orderItems OrderItems[]
  models Model[] @relation("product_models")
  @@map("products")
}

model User {
  id    String @id @default(uuid())
  email String @unique

  order Order[]
  profile Profile?

  @@map("users")
}

model Profile {
  id        String    @id @default(uuid())
  avatarUrl String?   @map("avatar_url")
  userID    String    @unique
  user      User      @relation(fields: [userID], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("profiles")
}

model Order {
  id     String @id @default(uuid())
  total  Float
  
  orderItems OrderItems[]

  userID String 
  user   User   @relation(fields: [userID], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItems {
  
  orderID String 
  productID String

  order   Order   @relation(fields: [orderID], references: [id])
  product Product @relation(fields: [productID], references: [id])
  
  total  Float
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([orderID, productID])
  @@map("order_items")
}

model Model {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  products Product[] @relation("product_models")
  @@map("model")
}
